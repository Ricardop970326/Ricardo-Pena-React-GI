{"ast":null,"code":"var _jsxFileName = \"/Users/ricardopena/Desktop/react-GI/src/App.js\";\n// // Note:  Solutions should use class components. \n// // 1.) VERY EASY: Inside of your ‘App’ class ‘render’ method, return a div with your basic information for example name, number, date of birth and etc. This div should be hard-coded to prepare for the Medium Challenge.\n\n// import React, { Component } from 'react';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Name: Ricardo Pena</h1>\n//         <p>Number: (737) 318-3154</p>\n//         <p>Date of Birth: March 1, 1997</p>\n//         {/* */}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n////////////////////////////////\n\n// 2.) EASY: Create a ‘constructor’ that takes in ‘props’ , call the ‘super()’ method, and set ‘this.state’ to an empty object inside of the ‘App’ class. Inside of ‘this.state’ create a ‘person’ property and set it to an empty object\n\n// import React, { Component } from 'react';\n// import Person from './components/person';\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       person: {\n//         name: 'Ricardo Pena',\n//         number: '(737) 318-3154',\n//         dateOfBirth:'March 1, 1997',\n//       },\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Person person={this.state.person} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n/////////////////////////////////////////////\n\n// 3.) MEDIUM: Replace all of the hard-coded with data from ‘this.state.person’ in the constructor.  Then take the returned ‘div’ and create a component, pass state into it and import it as ‘BasicInfo’. (This challenge should not change the look of the page)\n\nimport React, { Component } from 'react';\nimport BasicInfo from './components/person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: {\n        name: 'John Doe',\n        number: '123-456-7890',\n        dateOfBirth: 'January 1, 2000'\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BasicInfo, {\n        person: this.state.person\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","BasicInfo","jsxDEV","_jsxDEV","App","constructor","props","state","person","name","number","dateOfBirth","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ricardopena/Desktop/react-GI/src/App.js"],"sourcesContent":["\n// // Note:  Solutions should use class components. \n// // 1.) VERY EASY: Inside of your ‘App’ class ‘render’ method, return a div with your basic information for example name, number, date of birth and etc. This div should be hard-coded to prepare for the Medium Challenge.\n\n// import React, { Component } from 'react';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Name: Ricardo Pena</h1>\n//         <p>Number: (737) 318-3154</p>\n//         <p>Date of Birth: March 1, 1997</p>\n//         {/* */}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n////////////////////////////////\n\n\n// 2.) EASY: Create a ‘constructor’ that takes in ‘props’ , call the ‘super()’ method, and set ‘this.state’ to an empty object inside of the ‘App’ class. Inside of ‘this.state’ create a ‘person’ property and set it to an empty object\n\n// import React, { Component } from 'react';\n// import Person from './components/person';\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       person: {\n//         name: 'Ricardo Pena',\n//         number: '(737) 318-3154',\n//         dateOfBirth:'March 1, 1997',\n//       },\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Person person={this.state.person} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n/////////////////////////////////////////////\n\n\n// 3.) MEDIUM: Replace all of the hard-coded with data from ‘this.state.person’ in the constructor.  Then take the returned ‘div’ and create a component, pass state into it and import it as ‘BasicInfo’. (This challenge should not change the look of the page)\n\nimport React, { Component } from 'react';\nimport BasicInfo from './components/person';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: {\n        name: 'John Doe',\n        number: '123-456-7890',\n        dateOfBirth: 'January 1, 2000',\n      },\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <BasicInfo person={this.state.person} />\n      </div>\n    );\n  }\n}"],"mappings":";AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAC1BK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,MAAM,EAAE;QACNC,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAE,cAAc;QACtBC,WAAW,EAAE;MACf;IACF,CAAC;EACH;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA;MAAAU,QAAA,eACEV,OAAA,CAACF,SAAS;QAACO,MAAM,EAAE,IAAI,CAACD,KAAK,CAACC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}